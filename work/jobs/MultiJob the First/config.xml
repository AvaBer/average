<?xml version='1.0' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.28">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>FAIL</name>
          <description>should the build fail?</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.FileExistsCondition">
          <file>Main.java</file>
          <baseDir class="org.jenkins_ci.plugins.run_condition.common.BaseDirectory$Workspace"/>
        </condition>
      </condition>
      <buildStep class="hudson.tasks.BatchFile">
        <command>echo public class Main { &gt; Main.java&#xd;
echo public static void main(String[] args){ &gt;&gt; Main.java&#xd;
echo if (args.length ^&gt; 0 ^&amp;^&amp; args[0].equalsIgnoreCase(&quot;true&quot;)) System.exit(1);  &gt;&gt; Main.java&#xd;
echo System.out.println(&quot;wawa I&apos;m a string&quot;);  &gt;&gt; Main.java&#xd;
echo System.out.println(&quot;and I&apos;m loving it&quot;); &gt;&gt; Main.java&#xd;
echo } &gt;&gt; Main.java&#xd;
echo } &gt;&gt; Main.java&#xd;
</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.logic.Not" plugin="run-condition@1.0">
        <condition class="org.jenkins_ci.plugins.run_condition.core.FileExistsCondition">
          <file>Main.class</file>
          <baseDir class="org.jenkins_ci.plugins.run_condition.common.BaseDirectory$Workspace"/>
        </condition>
      </condition>
      <buildStep class="hudson.tasks.BatchFile">
        <command>javac Main.java</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.core.FileExistsCondition" plugin="run-condition@1.0">
        <file>Main.class</file>
        <baseDir class="org.jenkins_ci.plugins.run_condition.common.BaseDirectory$Workspace"/>
      </condition>
      <buildStep class="hudson.tasks.BatchFile">
        <command>java Main %FAIL% </command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <hudson.tasks.BatchFile>
      <command>echo &quot;WOOOO! I FINISHED!&quot;&#xd;
echo %FAIL% </command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers/>
  <buildWrappers/>
  <pollSubjobs>false</pollSubjobs>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>